xxx script1  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#!/bin/bash
# Este script pide un número y lo muestra si es mayor que 4
echo "El número que eliges es :" $1
a=$1
if [ $a -gt 4 ]
   then 
         echo " El valor " $a "es mayor que 4!  " 
fi
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxx script2 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#!/bin/bash
# Este script pide un número y lo muestra si es mayor que 4
echo " Dame un número :" 
read a
if [ $a -gt 4 ]
   then 
       echo " El valor " $a "es mayor que 4!  " 
   else      
       echo " El valor " $a "no es mayor que 4!  " 
fi
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxx script3    if-elif-else     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#!/bin/bash
# Este script pide un número y lo muestra si es mayor que 4
echo " Dame un número :" 
read a
if [ $a -gt 4 ]
   then 
       echo " El valor " $a "es mayor que 4!  " 
   elif [ $a -lt 4 ]
   then 
       echo " El valor " $a "es menor que 4!  " 
   else 
       echo " El valor " $a "es igual a   4!  " 
fi       
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
x    Ejercicio :   creadir.sh
x    Este script recibe dos argumentos, el primero será el directorio y 
x    el segundo será un fichero.
x    El script creará el directorio recibido como primer parámetro.
x    Y dentro de ese directorio, creará el fichero recibido como segundo parámetro.
x    - Debemos validar al principio del script el número de parámetros recibidos y
x   el script sólo se ejecuta si vienen dos paŕametros.
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#!/bin/bash
# Este script crea un directorio y dentro de él, un fichero.
# Debe recibir como parámetros el directorio y el fichero
if  [ $# -eq 2 ]
    then 
       mkdir $HOME/$1
       touch $HOME/$1/$2
  else 
       echo " Debes darme dos parámetros " 
fi       
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
x    Ejercicio :   creadir2.sh
x    Este script recibe dos argumentos, el primero será el directorio y 
x    el segundo será un fichero.
x    El script creará el directorio recibido como primer parámetro.
x    Y dentro de ese directorio, creará el fichero recibido como segundo parámetro.
x    - Debemos validar al principio del script el número de parámetros recibidos y
x   el script sólo se ejecuta si vienen dos paŕametros.
x   -  Antes de crear un elemento, debemos validar si existe. Y si existe damos un 
x   aviso sin ejecutar nada.
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#!/bin/bash
# Este script crea un directorio y dentro de él, un fichero.
# Debe recibir como parámetros el directorio y el fichero
if  test $# -eq 2
    then
        if test ! -d $HOME/$1
           then 
                mkdir $HOME/$1
        else
           echo "El directorio " $HOME/$1 " ya existe! "
        fi
       touch $HOME/$1/$2
  else 
       echo " Debes darme dos parámetros " 
fi       
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
x    Ejercicio bucle for :  listar_lineas.sh
x    Este script recibe un argumento, que será un directorio.
x    El script recorrerá el directorio  y contará cuántas filas tiene cada fichero
x   de ese directorio. 
x    Mostrará una fila con el nombre del fichero  y el número de líneas con este 
x   formato:
x       Fichero :      xxxxxxx     Lineas :   nnnnnnn
x   
x   - Antes de empezar, debemos validar si existe el directorio.
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#!/bin/bash
#  Primero preguntamos si el númeo de  parámetros ($#) es distinto (!) a 1 
if  ! [ $# -eq 1 ]
    then 
       echo "Dame un directorio como argumento"
else
#  Comprobamos si el parámetro recibido ($1) no es un directorio 
   if ! [ -d $1 ] 
      then 
           echo "El argumento debe ser un directorio "
   else
#  Si el parámetro es un directorio, entonces empezamos un bucle 
#  que recorre todos los archivos -en general- del directorio (ls $1)
      for  k  in  `ls $1`
      do
#  para cada archivo del directorio comprobamos si es un fichero ( -f $1/$k)
#  y si es así, contamos las líneas (wc -l < $1/$k)
        if [ -f $1/$k ]
           then 
#  Componemos una sola línea con varias informaciones           
            echo "Fichero : " $k  " Líneas : "  `wc -l < $1/$k`
        fi
      done
   fi
fi







